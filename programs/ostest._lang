main();
halt;

include <dynmem.4lwa>;
include <print.4lwa>;
include <strings.4lwa>;

declare dynmemInit;
declare printTerminated;
declare malloc returns;
declare println;
declare free;
declare strEq returns;
declare readCharNoEcho returns;


declare lineEnter returns;
function lineEnter(bufflen){
    var buff;
    buff := malloc(bufflen);
    var pos;
    pos := buff;
    
    var char;
    while (pos != (buff + (bufflen*4) - 4)){
        label continue;
        char := readCharNoEcho();
        if (char == __C_){
            # Enter char
            goto done;
        };
        if (char == __CB){
            # Backspace char
            if (pos == buff){
                # Shouldn't backspace past beginning
                goto continue;
            };
            [IO] := __CB;
            pos := pos - 4;
            goto continue;
            
        };
        [IO] := char;        
        *pos := char;
        pos := pos + 4;

        
    };
    label done;
    *pos := ZZZZ;
    [IO] := __C_;
    return buff;
    
 };

function logWord(str, word){
    printTerminated(str);
    printWord(word);
    printNewline();
};

function strcpy(src, dest, maxlen){
    var i;
    var char;    
    
    i := 0;
    while (1){
        char := *(src + (i*4));
        *(dest + (i*4)) := char;
        if (char == ZZZZ){
            goto endstr;
        };

        if (i > maxlen){
           goto endstr;
        };
        
        i := i + 1;
    };
    label endstr;
};

function evalcmd(cmdstr){
    if (strEq(cmdstr, "ping")){
        println("Pong!");
        return;
    };
    
};

function main(){
    dynmemInit(B___, ET__);
    println("Welcome to OSv2");

    var alloc;
    var cmd;
    while (1){
        println("Enter line");
        cmd := lineEnter(40);
        printTerminated("Entered: ");
        #println(cmd);
        evalcmd(cmd);
        free(cmd);
        
    };
};