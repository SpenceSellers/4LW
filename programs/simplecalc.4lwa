JP [const :start]

import print.4lwa
import strings.4lwa
import base10.4lwa

label start
MV [const 0] [reg C]

label loop

call printTerminated [const st"Value is"]
call printWord [reg C]
call printTerminated [const :b10]
call printBase10 [reg C]
call printNewline
call printTerminated [const :inputstr]
call readLine [const :buffer] [const 20]
#MV [stack V] [const 0] # Delete

FN [const :memcmp] [const :buffer] [const s"inc"] [const 3]
JE [stack V] [const ZZZZ] [const :increment]

FN [const :memcmp] [const :buffer] [const s"dec"] [const 3]
JE [stack V] [const ZZZZ] [const :decrement]

FN [const :memcmp] [const :buffer] [const s"rst"] [const 3]
JE [stack V] [const ZZZZ] [const :reset]

call printTerminated [const :invalid]
call printNewline
JP [const :loop]

label increment
MV [reg inc C] [reg C]
JP [const :loop]

label decrement
MV [reg dec C] [reg C]
JP [const :loop]

label reset
MV [const 0] [reg C]
JP [const :loop]

HL
string buffer "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
# term_string valis "Value is "
term_string b10 " or in base 10 "
term_string inputstr "Command "
term_string invalid "That is not a valid command"

literals
